/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package empsoft;

import com.sun.speech.freetts.*;
import de.dfki.lt.freetts.mbrola.MbrolaCaller;
import javafx.scene.paint.Color;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import java.io.*;

import edu.cmu.sphinx.frontend.util.Microphone;
import edu.cmu.sphinx.recognizer.Recognizer;
import edu.cmu.sphinx.result.Result;
import edu.cmu.sphinx.util.props.ConfigurationManager;
import edu.cmu.sphinx.util.props.PropertyException;
import java.io.File;
import java.io.IOException;
import java.net.URL;

/**
 *
 * @author suresh
 */
public class LoginScreen extends javax.swing.JFrame {

    /**
     * Creates new form LoginScreen
     */
   // static Voice voice;
    public LoginScreen() {
        initComponents();
       /* try{
        VoiceManager vm=VoiceManager.getInstance();
        voice=vm.getVoice(VOICENAME);
        voice.allocate();
        }catch(Exception e)
        {
            
        }*/
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        rootpanel = new javax.swing.JPanel();
        uname = new javax.swing.JTextField();
        pass = new javax.swing.JPasswordField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        changep = new javax.swing.JLabel();
        minimize = new javax.swing.JLabel();
        closelabel = new javax.swing.JLabel();
        loginb = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        welcomepanel = new javax.swing.JPanel();
        closelabel1 = new javax.swing.JLabel();
        minimize1 = new javax.swing.JLabel();
        clabel = new javax.swing.JLabel();
        changepass = new javax.swing.JPanel();
        pf1 = new javax.swing.JPasswordField();
        pf2 = new javax.swing.JPasswordField();
        pf3 = new javax.swing.JPasswordField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        backbut = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setAlwaysOnTop(true);
        setUndecorated(true);
        setResizable(false);

        rootpanel.setLayout(null);

        uname.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        uname.setMargin(new java.awt.Insets(15, 15, 15, 15));
        uname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                unameActionPerformed(evt);
            }
        });
        rootpanel.add(uname);
        uname.setBounds(230, 160, 300, 40);

        pass.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        pass.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                passActionPerformed(evt);
            }
        });
        rootpanel.add(pass);
        pass.setBounds(230, 240, 300, 40);

        jLabel4.setFont(new java.awt.Font("Viner Hand ITC", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 169, 238));
        jLabel4.setText("USERNAME:");
        rootpanel.add(jLabel4);
        jLabel4.setBounds(230, 140, 110, 23);

        jLabel5.setFont(new java.awt.Font("Viner Hand ITC", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 190, 255));
        jLabel5.setText("PASSWORD:");
        rootpanel.add(jLabel5);
        jLabel5.setBounds(230, 220, 110, 23);

        changep.setFont(new java.awt.Font("Virtual DJ", 0, 11)); // NOI18N
        changep.setForeground(new java.awt.Color(204, 204, 204));
        changep.setText("Change Password?");
        changep.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                changepMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                changepMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                changepMouseExited(evt);
            }
        });
        rootpanel.add(changep);
        changep.setBounds(230, 290, 170, 20);

        minimize.setIcon(new javax.swing.ImageIcon(getClass().getResource("/empsoft/mini1.png"))); // NOI18N
        minimize.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                minimizeMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                minimizeMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                minimizeMouseExited(evt);
            }
        });
        rootpanel.add(minimize);
        minimize.setBounds(660, 0, 50, 60);

        closelabel.setBackground(new java.awt.Color(0, 255, 0));
        closelabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/empsoft/close2.png"))); // NOI18N
        closelabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                closelabelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                closelabelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                closelabelMouseExited(evt);
            }
        });
        rootpanel.add(closelabel);
        closelabel.setBounds(710, 0, 60, 60);

        loginb.setBackground(new java.awt.Color(176, 179, 182));
        loginb.setText("LOGIN");
        loginb.setToolTipText("");
        loginb.setAutoscrolls(true);
        loginb.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        loginb.setBorderPainted(false);
        loginb.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        loginb.setFocusPainted(false);
        loginb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginbActionPerformed(evt);
            }
        });
        rootpanel.add(loginb);
        loginb.setBounds(300, 320, 150, 40);

        jLabel1.setBackground(new java.awt.Color(0, 0, 0));
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/empsoft/plasma_by_tobaal-d30k3ak.gif"))); // NOI18N
        rootpanel.add(jLabel1);
        jLabel1.setBounds(-20, 0, 880, 520);

        welcomepanel.setLayout(null);

        closelabel1.setBackground(new java.awt.Color(0, 255, 0));
        closelabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/empsoft/close2.png"))); // NOI18N
        closelabel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                closelabel1MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                closelabel1MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                closelabel1MouseExited(evt);
            }
        });
        welcomepanel.add(closelabel1);
        closelabel1.setBounds(720, 0, 60, 60);

        minimize1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/empsoft/mini1.png"))); // NOI18N
        minimize1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                minimize1MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                minimize1MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                minimize1MouseExited(evt);
            }
        });
        welcomepanel.add(minimize1);
        minimize1.setBounds(660, 0, 50, 60);

        clabel.setIcon(new javax.swing.ImageIcon("C:\\Users\\suresh\\Desktop\\loginback.jpg")); // NOI18N
        welcomepanel.add(clabel);
        clabel.setBounds(0, 0, 790, 510);

        changepass.setMaximumSize(new java.awt.Dimension(756, 509));
        changepass.setLayout(null);
        changepass.add(pf1);
        pf1.setBounds(220, 130, 290, 40);
        changepass.add(pf2);
        pf2.setBounds(220, 200, 290, 40);
        changepass.add(pf3);
        pf3.setBounds(220, 270, 290, 40);

        jLabel2.setFont(new java.awt.Font("Viner Hand ITC", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 169, 238));
        jLabel2.setText("Enter Old Password:");
        changepass.add(jLabel2);
        jLabel2.setBounds(220, 103, 160, 30);

        jLabel3.setFont(new java.awt.Font("Viner Hand ITC", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 169, 238));
        jLabel3.setText("Enter New Password:");
        changepass.add(jLabel3);
        jLabel3.setBounds(220, 180, 160, 23);

        jLabel6.setFont(new java.awt.Font("Viner Hand ITC", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 169, 238));
        jLabel6.setText("Confirm New Password:");
        changepass.add(jLabel6);
        jLabel6.setBounds(220, 250, 180, 23);

        jButton1.setBackground(new java.awt.Color(124, 208, 208));
        jButton1.setText("SUBMIT");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        changepass.add(jButton1);
        jButton1.setBounds(280, 350, 160, 40);

        backbut.setIcon(new javax.swing.ImageIcon(getClass().getResource("/empsoft/Back_button.JPG"))); // NOI18N
        backbut.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                backbutMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                backbutMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                backbutMouseExited(evt);
            }
        });
        changepass.add(backbut);
        backbut.setBounds(0, 30, 60, 58);

        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/empsoft/background2.jpg"))); // NOI18N
        changepass.add(jLabel7);
        jLabel7.setBounds(-10, 0, 780, 510);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(rootpanel, javax.swing.GroupLayout.DEFAULT_SIZE, 791, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(welcomepanel, javax.swing.GroupLayout.DEFAULT_SIZE, 791, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(changepass, javax.swing.GroupLayout.PREFERRED_SIZE, 756, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(rootpanel, javax.swing.GroupLayout.DEFAULT_SIZE, 509, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(welcomepanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 509, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(changepass, javax.swing.GroupLayout.PREFERRED_SIZE, 509, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void unameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_unameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_unameActionPerformed

    private void closelabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_closelabelMouseClicked
        System.exit(0);
    }//GEN-LAST:event_closelabelMouseClicked

    private void closelabelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_closelabelMouseEntered
       maxicon=new ImageIcon(getClass().getResource("close3.png"));
       closelabel.setIcon(maxicon);
    }//GEN-LAST:event_closelabelMouseEntered

    private void minimizeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_minimizeMouseClicked
        // TODO add your handling code here:
        this.setState(LoginScreen.ICONIFIED);
    }//GEN-LAST:event_minimizeMouseClicked

  //  private static final String VOICENAME="kevin16";
   
    private void loginbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loginbActionPerformed
        // TODO add your handling code here:
        String username=uname.getText();
        String password=new String(pass.getPassword()); 
        if(username.compareTo(userName)==0&&password.compareTo(pwd)==0)
        {
           rootpanel.setVisible(false);
           welcomepanel.setVisible(true);
           changepass.setVisible(false);
        }
        else if(username.isEmpty()||password.isEmpty())
        {
            try{
           // voice.speak("please dont leave user-name or password field empty sir");
                rootpanel.setVisible(true);
                welcomepanel.setVisible(false);
                changepass.setVisible(false);
            }catch(Exception e){} 
        }
        else
        { 
            try{
           // voice.speak("wrong password sir");
            }catch(Exception e){}
        }
    }//GEN-LAST:event_loginbActionPerformed
            
    private void passActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_passActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_passActionPerformed

    private void minimizeMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_minimizeMouseEntered
        // TODO add your handling code here:
        minimizeicon=new ImageIcon(getClass().getResource("mini2.png"));
        minimize.setIcon(minimizeicon);
    }//GEN-LAST:event_minimizeMouseEntered

    private void minimizeMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_minimizeMouseExited
        // TODO add your handling code here:
        minimizeicon=new ImageIcon(getClass().getResource("mini1.png"));
        minimize.setIcon(minimizeicon);
    }//GEN-LAST:event_minimizeMouseExited

    private void closelabelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_closelabelMouseExited
        // TODO add your handling code here:
        maxicon=new ImageIcon(getClass().getResource("close2.png"));
        closelabel.setIcon(maxicon);
    }//GEN-LAST:event_closelabelMouseExited

    private void changepMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_changepMouseEntered
        // TODO add your handling code here:
        changep.setForeground(java.awt.Color.GREEN);
    }//GEN-LAST:event_changepMouseEntered

    private void changepMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_changepMouseExited
        // TODO add your handling code here:
        changep.setForeground(java.awt.Color.WHITE);
    }//GEN-LAST:event_changepMouseExited
   
    private void closelabel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_closelabel1MouseClicked
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_closelabel1MouseClicked

    private void closelabel1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_closelabel1MouseEntered
        // TODO add your handling code here:
        maxicon=new ImageIcon(getClass().getResource("close3.png"));
       closelabel.setIcon(maxicon);     
    }//GEN-LAST:event_closelabel1MouseEntered

    private void closelabel1MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_closelabel1MouseExited
        // TODO add your handling code here:
        maxicon=new ImageIcon(getClass().getResource("close2.png"));
        closelabel.setIcon(maxicon);
    }//GEN-LAST:event_closelabel1MouseExited

    private void minimize1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_minimize1MouseClicked
        // TODO add your handling code here:
        this.setState(LoginScreen.ICONIFIED);
    }//GEN-LAST:event_minimize1MouseClicked

    private void minimize1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_minimize1MouseEntered
        // TODO add your handling code here:
        minimizeicon=new ImageIcon(getClass().getResource("mini2.png"));
        minimize.setIcon(minimizeicon);
    }//GEN-LAST:event_minimize1MouseEntered

    private void minimize1MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_minimize1MouseExited
        // TODO add your handling code here:
        minimizeicon=new ImageIcon(getClass().getResource("mini1.png"));
        minimize.setIcon(minimizeicon);
    }//GEN-LAST:event_minimize1MouseExited

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        String oldpass=new String(pf1.getPassword());
        String newpass=new String(pf2.getPassword());
        String cnewpass=new String(pf3.getPassword());
        pf1.setText("");
        pf2.setText("");
        pf3.setText("");
        if(pwd.compareTo(oldpass)==0)
        {
            if(newpass.compareTo(cnewpass)==0)
            {
                try{
                   //  voice.speak("pass-word changed success-fully");
                   }catch(Exception e){} 
                pwd=newpass;
            }
            else
            {
                try{
                   // voice.speak("pass-words dont match sir");
                   }catch(Exception e){} 
            }
        }
        else
        {
            try{
          //  voice.speak("you have entered wrong pass-word sir");
            }catch(Exception e){} 
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void backbutMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backbutMouseClicked
        // TODO add your handling code here:
        rootpanel.setVisible(true);
        changepass.setVisible(false);
        welcomepanel.setVisible(false);
        pf1.setText("");
        pf2.setText("");
        pf3.setText("");
    }//GEN-LAST:event_backbutMouseClicked

    private void backbutMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backbutMouseEntered
        // TODO add your handling code here:
        backi=new ImageIcon(getClass().getResource("back2.png"));
        backbut.setIcon(backi);
    }//GEN-LAST:event_backbutMouseEntered

    private void backbutMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backbutMouseExited
        // TODO add your handling code here:
        backi=new ImageIcon(getClass().getResource("Back_button.jpg"));
        backbut.setIcon(backi);
    }//GEN-LAST:event_backbutMouseExited

    private void changepMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_changepMouseClicked
        // TODO add your handling code here: 
        rootpanel.setVisible(false);   
        welcomepanel.setVisible(false);
        changepass.setVisible(true);
        changepass.setSize(757,505);
    }//GEN-LAST:event_changepMouseClicked

    /**
     * @param args the command line arguments
     */
    static String userName="britsol",pwd="devil";
    static ImageIcon minimizeicon,maxicon,backi;
    JFrame window=new JFrame(); 
    static String resultText;
            
    
        
        
        
    static int i = 1;
   

    public static void main(String[] args) {
  
        try {
            URL url;
            if (args.length > 0) {
                url = new File(args[0]).toURI().toURL();
            } else {
                url = HelloWorld.class.getResource("helloworld.config.xml");
            }

            System.out.println("Loading...");

            ConfigurationManager cm = new ConfigurationManager(url);

            Recognizer recognizer = (Recognizer) cm.lookup("recognizer");
            Microphone microphone = (Microphone) cm.lookup("microphone");


            /* allocate the resource necessary for the recognizer */
            recognizer.allocate();

            /* the microphone will keep recording until the program exits */
            if (microphone.startRecording()) {
                System.out.println("Say: (Command | Program| Browser | Bluetooth |  Device Manager |Power Options |Cal | Control | Player |task manager | Windows Security Center)");
                System.out.println("Say: ( open word | open phot oshop|open Access|start Excel|start nero |start fire wall| open Pad |open Paint)");
                while (true) {

                    System.out.println("Start speaking. Press Ctrl-C to quit.\n");

                    /*
                     * This method will return when the end of speech
                     * is reached. Note that the endpointer will determine
                     * the end of speech.
                     */
                    Result result = recognizer.recognize();
                    if (result != null) {

                        System.out.println("Enter your choise" + "\n");
                        resultText = result.getBestFinalResultNoFiller();
                        System.out.println("You said: " + resultText + "\n");

                        if (resultText.equalsIgnoreCase("command")) {
                            try {
                                Process p;
                                //resultText="";
                                p = Runtime.getRuntime().exec("cmd /c start cmd");
 				//System.out.println("You said");

 				 //resultText = result.getBestFinalResultNoFiller();
                                //System.out.println("You said: " + resultText + "\n");
                            } catch (Exception er) {
                            }
                        }
                        if (resultText.equalsIgnoreCase("close command")) {
                            try {
                                Process p;	//resultText="";
                                p = Runtime.getRuntime().exec("cmd /c start taskkill /im cmd.exe /f");

                            } catch (Exception ae) {
                            }
                        }
                        if (resultText.equalsIgnoreCase("Power Options")) {
                            try {
                                Process p;	//resultText="";
                                p = Runtime.getRuntime().exec("cmd /c powercfg.cpl");

                            } catch (Exception ae) {
                            }
                        }
                        if (resultText.equalsIgnoreCase("Blue")) {
                            try {
                                Process p;	//resultText="";
                                p = Runtime.getRuntime().exec("cmd /c fsquirt");

                            } catch (Exception ae) {
                            }
                        }
                        if (resultText.equalsIgnoreCase("start photo shop")) {
                            try {
                                Process p;	//resultText="";
                                p = Runtime.getRuntime().exec("cmd /c start photoshop");

                            } catch (Exception ae) {
                            }
                        }
                        if (resultText.equalsIgnoreCase("calculator")) {
                            try {
                                Process p;	//resultText="";
                                p = Runtime.getRuntime().exec("cmd /c start calc");

                            } catch (Exception ae) {
                            }
                        }
                        if (resultText.equalsIgnoreCase("Windows Security Center")) {
                            try {
                                Process p;	//resultText="";
                                p = Runtime.getRuntime().exec("cmd /c wscui.cpl");

                            } catch (Exception ae) {
                            }
                        } else if (resultText.equalsIgnoreCase("Player")) {
                            try {
                                Process p;
                                //resultText="";
                                p = Runtime.getRuntime().exec("cmd /c start wmplayer");
                            } catch (Exception ae) {
                            }
                        } else if (resultText.equalsIgnoreCase("Program")) {
                            try {
                                Process p;
                                //resultText="";
                                p = Runtime.getRuntime().exec("cmd /c start appwiz.cpl");
                            } catch (Exception ae) {
                            }
                        } else if (resultText.equalsIgnoreCase("Control")) {
                            try {
                                Process p;
                                //	resultText="";
                                p = Runtime.getRuntime().exec("cmd /c control");
                            } catch (Exception ae) {
                            }
                        } else if (resultText.equalsIgnoreCase("open paint")) {
                            try {
                                Process p;
                                //resultText="";
                                p = Runtime.getRuntime().exec("cmd /c start mspaint");
                                // System.out.println("inside");
                            } catch (Exception ae) {
                            }
                        } else if (resultText.equalsIgnoreCase("close paint")) {
                            try {
                                Process p;
                                //resultText="";
                                p = Runtime.getRuntime().exec("cmd /c start taskkill /im mspaint.exe /f");
                                // System.out.println("inside");
                            } catch (Exception ae) {
                            }
                        } else if (resultText.equalsIgnoreCase("close calculator")) {
                            try {
                                Process p;
                                //resultText="";
                                p = Runtime.getRuntime().exec("cmd /c start taskkill /im calc.exe /f");
                                // System.out.println("inside");
                            } catch (Exception ae) {
                            }
                        } else if (resultText.equalsIgnoreCase("Browser")) {
                            try {
                                Process p;//	resultText="";
                                p = Runtime.getRuntime().exec("cmd /c start chrome.exe");
                                // System.out.println("inside");
                            } catch (Exception ae) {
                            }
                        } else if (resultText.equalsIgnoreCase("close Browser")) {
                            try {
                                Process p;//	resultText="";
                                p = Runtime.getRuntime().exec("cmd /c start taskkill /im chrome.exe /f");
                                // System.out.println("inside");
                            } catch (Exception ae) {
                            }
                        } else if (resultText.equalsIgnoreCase("task manager")) {
                            try {
                                Process p;
                                //resultText="";
                                p = Runtime.getRuntime().exec("cmd /c start taskmgr.exe");
                                // System.out.println("inside");
                            } catch (Exception ae) {
                            }
                        } else if (resultText.equalsIgnoreCase("Adobe")) {
                            try {
                                Process p;
                                //resultText="";
                                p = Runtime.getRuntime().exec("cmd /c start acrord32.exe");
                                // System.out.println("inside");
                            } catch (Exception ae) {
                            }
                        } else if (resultText.equalsIgnoreCase("site face book")) {
                            try {
                                Process p;
                                //resultText="";
                                p = Runtime.getRuntime().exec("cmd /c start chrome www.facebook.com");
                                // System.out.println("inside");
                            } catch (Exception ae) {
                            }
                        } else if (resultText.equalsIgnoreCase("site go girl")) {
                            try {
                                Process p;
                                //resultText="";
                                p = Runtime.getRuntime().exec("cmd /c start chrome www.google.com");
                                // System.out.println("inside");
                            } catch (Exception ae) {
                            }
                        } else if (resultText.equalsIgnoreCase("site mail")) {
                            try {
                                Process p;
                                //resultText="";
                                p = Runtime.getRuntime().exec("cmd /c start chrome https://mail.google.com");
                                // System.out.println("inside");
                            } catch (Exception ae) {
                            }
                        } else if (resultText.equalsIgnoreCase("close task manager")) {
                            try {
                                Process p;
                                //resultText="";
                                p = Runtime.getRuntime().exec("cmd /c start taskkill /im taskmgr.exe /f");
                                // System.out.println("inside");
                            } catch (Exception ae) {
                            }
                        } else if (resultText.equalsIgnoreCase("open pad")) {
                            try {
                                Process p;	//resultText="";
                                p = Runtime.getRuntime().exec("cmd /c start notepad");
                                // System.out.println("inside");
                            } catch (Exception ae) {
                            }
                        } else if (resultText.equalsIgnoreCase("close pad")) {
                            try {
                                Process p;	//resultText="";
                                p = Runtime.getRuntime().exec("cmd /c start taskkill /im notepad.exe /f");
                                // System.out.println("inside");
                            } catch (Exception ae) {
                            }
                        } else if (resultText.equalsIgnoreCase("open word")) {
                            try {
                                Process p;	//resultText="";
                                p = Runtime.getRuntime().exec("cmd /c start winword");
                                // System.out.println("inside");
                            } catch (Exception ae) {
                            }
                        } else if (resultText.equalsIgnoreCase("close word")) {
                            try {
                                Process p;	//resultText="";
                                p = Runtime.getRuntime().exec("cmd /c start taskkill /im winword.exe /f");
                                // System.out.println("inside");
                            } catch (Exception ae) {
                            }
                        } else if (resultText.equalsIgnoreCase("start word pad")) {
                            try {
                                Process p;	//resultText="";
                                p = Runtime.getRuntime().exec("cmd /c  write");
                                // System.out.println("inside");
                            } catch (Exception ae) {
                            }
                        } else if (resultText.equalsIgnoreCase("stop word pad")) {
                            try {
                                Process p;	//resultText="";
                                p = Runtime.getRuntime().exec("cmd /c  start taskkill /im wordpad.exe /f");
                                // System.out.println("inside");
                            } catch (Exception ae) {
                            }
                        } else if (resultText.equalsIgnoreCase("start Excel")) {
                            try {
                                Process p;	//resultText="";
                                p = Runtime.getRuntime().exec("cmd /c start excel");
                                // System.out.println("inside");
                            } catch (Exception ae) {
                            }
                        } else if (resultText.equalsIgnoreCase("stop Excel")) {
                            try {
                                Process p;	//resultText="";
                                p = Runtime.getRuntime().exec("cmd /c start taskkill /im excel.exe /f");
                                // System.out.println("inside");
                            } catch (Exception ae) {
                            }
                        } else if (resultText.equalsIgnoreCase("start firewall")) {
                            try {
                                Process p;	//resultText="";
                                p = Runtime.getRuntime().exec("cmd /c start firewall.cpl");
                                // System.out.println("inside");
                            } catch (Exception ae) {
                            }
                        } else if (resultText.equalsIgnoreCase("close fire wall")) {
                            try {
                                Process p;	//resultText="";
                                String status = "status eq Windows Firewall";
                                p = Runtime.getRuntime().exec("cmd /c taskkill /f /fi " + status);
                                // System.out.println("inside");
                            } catch (Exception ae) {
                            }
                        } else if (resultText.equalsIgnoreCase("start nero")) {
                            try {
                                Process p;	//resultText="";
                                p = Runtime.getRuntime().exec("cmd /c start nero");
                                // System.out.println("inside");
                            } catch (Exception ae) {
                            }
                        } else if (resultText.equalsIgnoreCase("open Access")) {
                            try {
                                Process p;	//resultText="";
                                p = Runtime.getRuntime().exec("cmd /c start msaccess");
                                // System.out.println("inside");
                            } catch (Exception ae) {
                            }
                        } else if (resultText.equalsIgnoreCase("close access")) {
                            try {
                                Process p;	//resultText="";
                                p = Runtime.getRuntime().exec("cmd /c start taskkill /im msaccess.exe /f");
                                // System.out.println("inside");
                            } catch (Exception ae) {
                            }
                        } else if (resultText.equalsIgnoreCase("speech recognize complete")) {
                            try {
                                System.out.println("Thanks for using !");
                                recognizer.deallocate();
                                System.exit(0);
                            } catch (Exception ecomp) {
                            }
                        } else if (resultText.equalsIgnoreCase("speech recognize start")) {
                            try {

                                recognizer.notify();
                                System.out.println("Hello again :-) ");
                                System.exit(0);
                            } catch (Exception estart) {
                            }
                        } else if (resultText.equalsIgnoreCase("stop recognize")) {
                            try {

                                //recognizer.wait();
                                System.out.println("See you later!");
                                System.exit(0);
                            } catch (Exception estop) {
                            }
                        } else if (resultText.equalsIgnoreCase("Device Manager")) {
                            try {
                                Process p;	//resultText="";
                                p = Runtime.getRuntime().exec("cmd /c start devmgmt.msc");
                                // System.out.println("inside");
                            } catch (Exception ae) {
                            }
                        }

                    } else {
                        System.out.println("I can't hear what you said.\n");
                    }
                }
            } else {
                System.out.println("Cannot start microphone.");
                recognizer.deallocate();
                System.exit(1);
            }

        } catch (IOException e) {
            System.err.println("Problem when loading HelloWorld: " + e);
            e.printStackTrace();
        } catch (PropertyException e) {
            System.err.println("Problem configuring HelloWorld: " + e);
            e.printStackTrace();
        } catch (InstantiationException e) {
            System.err.println("Problem creating HelloWorld: " + e);
            e.printStackTrace();
        }

        
    
          /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LoginScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LoginScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LoginScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LoginScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new LoginScreen().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel backbut;
    private javax.swing.JLabel changep;
    private javax.swing.JPanel changepass;
    private javax.swing.JLabel clabel;
    private javax.swing.JLabel closelabel;
    private javax.swing.JLabel closelabel1;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JButton loginb;
    private javax.swing.JLabel minimize;
    private javax.swing.JLabel minimize1;
    private javax.swing.JPasswordField pass;
    private javax.swing.JPasswordField pf1;
    private javax.swing.JPasswordField pf2;
    private javax.swing.JPasswordField pf3;
    private javax.swing.JPanel rootpanel;
    private javax.swing.JTextField uname;
    private javax.swing.JPanel welcomepanel;
    // End of variables declaration//GEN-END:variables
}
